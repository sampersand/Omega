->$dnd
class:ll:():{
    func:$init:(arg):{
        disp:('in init!')
        $this:setattr:('a', arg)
        return:$this
    }
    func:$str:():{
        return:('$STR::'+$this:getattr:('a'))
    }
}
a <- ll:$init:(90.3)
disp:(a:$str:())
@eof
class:_llobj:():{
    func:$init:(data, next):{
        $this:setattr:('data', data)
        $this:setattr:('next', next)
    }
}
class:ll:():{
    func:$init:():{
        $this:setattr:('head', nil)
        $this:setattr:('head', _llobj:$init:(data, 1))
        return:$this
    }
    func:add:(data):{
        $this:setattr:('head', _llobj:(data, $this:getattr:('head')))
    }
    func:$str:():{
        '' -> ret
        next <- $this:getattr:('head')
        ret <- ret + next:$str
        return:ret
    }
}
l <- ll:$init:()
l:$str