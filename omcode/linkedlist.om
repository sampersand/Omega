->$dnd
class:_node:():{
    func:$init:(data, next):{
        $this:$sa:('data', data)
        $this:$sa:('next', next)
        return:$this
    }
}
class:Stack:():{
    func:$init:():{
        $this:$sa:('head', nil)
        return:$this
    }
    func:push:(n):{
        $this:$sa:('head', _node:$init:(n, $this:$ga:('head')))
    }
    func:pop:():{
        ret <- $this:$ga:('head')
        $this:$sa:('head', ret:$ga:('next'))
        return:(ret:$ga:('data'))
    }
    func:$str:():{
        next <- $this:$ga:('head')
        if:(next == nil):{
            return:'[]'
        }

        ret <- '[' + next:$ga:('data')
        whilst:(nil <> (next <- next:$ga:('next'))):{
            ret <+- ', ' + next:$ga:('data')
        }

        return:(ret + ']')
    }
}

stack <- Stack:$init:()
stack:push:(1.9)
stack:push:(1.8)
disp:(stack:$str:())
disp:(stack:pop:())
disp:(stack:pop:())
disp:(stack:$str:())