class:_node:():{
    func:$init:(data, next):{
        $this:$sa:('data', data)
        $this:$sa:('next', next)
        return:$this
    }
}
class:Stack:():{
    func:$init:():{
        $this:$sa:('head', nil)
        return:$this
    }
    func:push:(n):{
        $this:$sa:('head', _node:$init:(n, $this:$ga:('head')))
    }
    func:$str:():{
        ret <- '['
        next <- $this:$ga:('head')
        whilst:(next <> nil):{
            ret <- ret + next:$ga:('data') + ', '
            next <- next:$ga:('next')
        }
        return:(ret + ']')
    }
}
stack <- Stack:$init:()
stack:push:(1.9)
disp:(stack:$str:())